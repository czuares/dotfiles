#!/usr/bin/env bash

source ~/.zsh/functions.sh##work

# source virtualenvwrapper.sh

# source pyenv
if command -v pyenv &>/dev/null; then
  eval "$(pyenv init -)"
  pyenv virtualenvwrapper
fi

# source <(kubectl completion zsh)
# source ~/.nix-profile/etc/profile.d/nix.sh

# source <(stern --completion=zsh)
# source ~/.local/bin/aws_zsh_completer.sh

# Setup GPG
# GPG_TTY=$(tty)
# export GPG_TTY
# if ! gpg-connect-agent /bye || [ -z "$GPG_AGENT_INFO" ]; then
#     eval "$(gpg-agent --daemon)"
#     GPG_AGENT_INFO="$HOME/.gnupg/S.gpg-agent:$(pgrep gpg-agent):1"
#     export GPG_AGENT_INFO
# fi
# if [ -z "$SSH_AUTH_SOCK" ]; then
#     SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
#     export SSH_AUTH_SOCK
# fi
if ! gpg-connect-agent /bye; then
  gpgconf --launch gpg-agent
fi
export GPG_TTY=$(tty)
export GPG_AGENT_INFO="~/.gnupg/S.gpg-agent:$(pgrep gpg-agent):1"
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
# eval $(keychain --eval --quiet --agents gpg,ssh id_rsa 0x97756AE7B8A4FDA9)

# Source chtf
if [[ -f /usr/local/share/chtf/chtf.sh ]]; then
  source "/usr/local/share/chtf/chtf.sh"
  chtf 0.12.12
fi

brew() {
  local dump=false;
  if [[ $# -gt 0 ]]; then
    case "$1" in
      *install|*tap)
        dump=true;
        ;;
      cask)
        if [[ $# -gt 2 ]]; then
          case "$2" in
            *install)
              dump=true;
              ;;
          esac
        fi
        ;;
    esac
  fi
  command brew "$@"

  if $dump; then
    echo "Updating Brewfile"
    command brew bundle dump --force --file="$HOME/.config/brew/Brewfile"
  fi
}

